{"ast":null,"code":"var _jsxFileName = \"/home/latif/todo-app/src/components/TaskItem.js\";\n// src/components/TaskItem.js\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, Card } from 'react-bootstrap';\nconst taskVariants = {\n  completed: {\n    opacity: 0.5,\n    textDecoration: 'line-through'\n  },\n  active: {\n    opacity: 1,\n    textDecoration: 'none'\n  }\n};\nconst TaskItem = ({\n  task,\n  toggleComplete,\n  deleteTask\n}) => {\n  return /*#__PURE__*/React.createElement(motion.div, {\n    variants: taskVariants,\n    animate: task.completed ? 'completed' : 'active',\n    transition: {\n      duration: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, task.text), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(motion.button, {\n    className: \"btn btn-success mr-2\",\n    whileHover: {\n      scale: 1.1\n    },\n    whileTap: {\n      scale: 0.9\n    },\n    onClick: () => toggleComplete(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, task.completed ? 'Undo' : 'Complete'), /*#__PURE__*/React.createElement(motion.button, {\n    className: \"btn btn-danger\",\n    whileHover: {\n      scale: 1.1\n    },\n    whileTap: {\n      scale: 0.9\n    },\n    onClick: () => deleteTask(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n};\nexport default TaskItem;","map":{"version":3,"names":["React","motion","Button","Card","taskVariants","completed","opacity","textDecoration","active","TaskItem","task","toggleComplete","deleteTask","createElement","div","variants","animate","transition","duration","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Body","Text","text","button","whileHover","scale","whileTap","onClick","id"],"sources":["/home/latif/todo-app/src/components/TaskItem.js"],"sourcesContent":["// src/components/TaskItem.js\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, Card } from 'react-bootstrap';\n\nconst taskVariants = {\n  completed: { opacity: 0.5, textDecoration: 'line-through' },\n  active: { opacity: 1, textDecoration: 'none' },\n};\n\nconst TaskItem = ({ task, toggleComplete, deleteTask }) => {\n  return (\n    <motion.div\n      variants={taskVariants}\n      animate={task.completed ? 'completed' : 'active'}\n      transition={{ duration: 0.5 }}\n    >\n      <Card className=\"mb-3\">\n        <Card.Body className=\"d-flex justify-content-between align-items-center\">\n          <Card.Text>{task.text}</Card.Text>\n          <div>\n            <motion.button\n              className=\"btn btn-success mr-2\"\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={() => toggleComplete(task.id)}\n            >\n              {task.completed ? 'Undo' : 'Complete'}\n            </motion.button>\n            <motion.button\n              className=\"btn btn-danger\"\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={() => deleteTask(task.id)}\n            >\n              Delete\n            </motion.button>\n          </div>\n        </Card.Body>\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default TaskItem;\n\n\n\n\n\n\n\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,cAAc,EAAE;EAAe,CAAC;EAC3DC,MAAM,EAAE;IAAEF,OAAO,EAAE,CAAC;IAAEC,cAAc,EAAE;EAAO;AAC/C,CAAC;AAED,MAAME,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,cAAc;EAAEC;AAAW,CAAC,KAAK;EACzD,oBACEZ,KAAA,CAAAa,aAAA,CAACZ,MAAM,CAACa,GAAG;IACTC,QAAQ,EAAEX,YAAa;IACvBY,OAAO,EAAEN,IAAI,CAACL,SAAS,GAAG,WAAW,GAAG,QAAS;IACjDY,UAAU,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE9BxB,KAAA,CAAAa,aAAA,CAACV,IAAI;IAACsB,SAAS,EAAC,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBxB,KAAA,CAAAa,aAAA,CAACV,IAAI,CAACuB,IAAI;IAACD,SAAS,EAAC,mDAAmD;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtExB,KAAA,CAAAa,aAAA,CAACV,IAAI,CAACwB,IAAI;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,IAAI,CAACkB,IAAgB,CAAC,eAClC5B,KAAA,CAAAa,aAAA;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExB,KAAA,CAAAa,aAAA,CAACZ,MAAM,CAAC4B,MAAM;IACZJ,SAAS,EAAC,sBAAsB;IAChCK,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IAC3BC,QAAQ,EAAE;MAAED,KAAK,EAAE;IAAI,CAAE;IACzBE,OAAO,EAAEA,CAAA,KAAMtB,cAAc,CAACD,IAAI,CAACwB,EAAE,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEtCd,IAAI,CAACL,SAAS,GAAG,MAAM,GAAG,UACd,CAAC,eAChBL,KAAA,CAAAa,aAAA,CAACZ,MAAM,CAAC4B,MAAM;IACZJ,SAAS,EAAC,gBAAgB;IAC1BK,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IAC3BC,QAAQ,EAAE;MAAED,KAAK,EAAE;IAAI,CAAE;IACzBE,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACF,IAAI,CAACwB,EAAE,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpC,QAEc,CACZ,CACI,CACP,CACI,CAAC;AAEjB,CAAC;AAED,eAAef,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}